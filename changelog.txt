02/08/15-10:44:23: Initial commit
02/08/15-10:46:19: Added changelog file.
02/08/15-16:48:03: Removed experts.dat file from repository
02/08/15-17:06:11: Adding TickReader and ignoring log files.
02/08/15-23:58:38: Updated syntax for TickReader.mq5
02/09/15-17:34:37: Added file generation support for TickReader.
02/09/15-21:12:43: Adding initial implementation for LogManager.
02/10/15-00:16:25: Started implementation of unit test library.
02/10/15-10:46:11: Refactored Test Suite for recursion support.
02/10/15-11:39:01: Added support for ASSERT macro.
02/10/15-17:23:24: Added support for test packages.
02/10/15-17:38:25: Cut Testing header in multiple parts.
02/10/15-22:24:04: Added minimal support to retrieve passed and failed tests.
02/10/15-23:22:37: Added CList usage for TestCases
02/10/15-23:29:15: Added list usage for TestSuites.
02/11/15-09:08:21: Retrieve all test data in TestSessionResult.
02/11/15-13:56:46: Retrieving messages as part of the test data.
02/11/15-16:06:41: Working on test result report page.
02/11/15-16:10:04: Added the html files on the repository.
02/12/15-09:18:43: Adding additional formating for test log page.
02/12/15-23:22:53: Updated log template to handle colors properly.
02/13/15-17:38:46: Started implementation of vecd class.
02/13/15-23:18:35: Investigating issue with CList for test suites.
02/14/15-09:11:15: Using array list for test suites to avoid linked list pointer mixing.
02/14/15-11:33:41: Added initial implementation for StringStream.
02/14/15-14:41:55: Added initial implementation for logging system.
02/14/15-15:05:56: Added support for FileLogger close.
02/15/15-16:49:44: Added core strategy implementation.
02/15/15-18:55:58: Trying to get algorithm to work.
02/17/15-02:04:20: Started implementation of RRL model.
02/17/15-12:11:49: Adding support for RRL model debugging.
02/18/15-17:27:10: Added initial implementation for LBFGS algorithm.
02/19/15-01:07:34: Finalized LBFGS implementation. Adding source for octave version.
02/19/15-14:56:21: Implemented optimization of RRL model with minCG.
02/21/15-16:51:36: Investigations on RRL model.
02/22/15-17:32:51: winning 0.00143 units in 1 week without too much drawndown.
02/22/15-18:02:12: Using eval_len as max evaluation length.
02/23/15-12:41:45: Added start and end signals for training.
02/23/15-14:52:19: Adding implementation of RRLCostFunction class.
02/23/15-15:58:09: Creating proper RRLModel.
02/23/15-16:31:30: Adding support for history generatino.
02/23/15-20:54:17: Added implementation for object map class.
02/23/15-22:54:39: Added HistoryMap tests.
02/24/15-16:10:02: Added initial implementation for strategy.
02/24/15-22:40:11: Refactoring classes for better trade model organization.
02/25/15-09:21:01: Added test on strategy dryrun. Minor fix in testing framework.
02/25/15-15:09:00: Adding batch and online training support.
02/25/15-15:59:48: Adding support for theoretical returns computation.
02/25/15-23:12:15: Added proper computation for returns mean and deviation.
02/26/15-18:37:43: Added initial implementation for online training model.
02/26/15-21:49:11: Initial setup for strategy evaluation.
02/27/15-14:40:28: Fixed incorrect value for transaction cost. Fixed max drawdown computation. Computed real stats on strategy.
02/27/15-15:09:54: Fixed computation of dFtdw. This didnt help.
02/27/15-15:26:25: Added suport for warmUp phase.
02/28/15-11:08:07: Added implementation for costFunction_SR.
03/02/15-09:45:25: Testing many things. Added trainMode support.
03/02/15-11:09:12: Adding implementation of train context for stochastic support.
03/02/15-13:31:08: Added implemntation of stochastic gradient descent.
03/02/15-15:24:41: Added test result for stochastic training.
03/02/15-16:09:40: Removed obsolete computeWeight method.
03/02/15-16:15:12: Removed some obsolete methods.
03/02/15-16:26:36: Removed initOnlineContext()
03/02/15-16:38:32: Added vectors for trailing signals and return moments.
03/02/15-20:48:17: Tested stochastic training with dFt_1 = 0.0 at start.
03/03/15-09:10:27: Tested with proper initial context settings before training.
03/03/15-09:33:18: Added variable for number of transactions. Using signal threshold of 0.8 for simple strategy test.
03/03/15-09:38:40: Added support for num deals computation in strategy eval.
03/03/15-11:27:03: Tested training with recomputation of Ft and Rt after theta update.
03/03/15-17:36:55: Tested with signal adaptation set to 0.02 => This has no effect (it is not used.).
03/03/15-20:14:45: Adding generic implementation of costfunction.
03/03/15-21:19:48: Tested with signal mean length set to 50 -> This will reduce the final wealth.
03/03/15-21:21:35: Merged changes.
03/04/15-00:12:48: Added proper implementation for generic cost function and train context.
03/04/15-00:43:42: Minor lyaout update.
03/04/15-02:04:10: Added initial implementation for DDR cost function. Preparing test for proper index in loadState.
03/04/15-11:52:38: Fixed input to loadState. Still testing with initial implementation.
